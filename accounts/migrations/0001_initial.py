# Generated by Django 4.2.23 on 2025-07-07 18:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('stokvel', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number.')])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('id_number', models.CharField(blank=True, help_text='National ID or passport number', max_length=20)),
                ('address_line_1', models.CharField(blank=True, max_length=200)),
                ('address_line_2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('province', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=10)),
                ('country', models.CharField(default='South Africa', max_length=100)),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('af', 'Afrikaans'), ('zu', 'Zulu'), ('xh', 'Xhosa'), ('st', 'Sotho'), ('tn', 'Tswana'), ('ts', 'Tsonga'), ('ss', 'Swati'), ('ve', 'Venda'), ('nr', 'Ndebele')], default='en', max_length=10)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('whatsapp_notifications', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('member_number', models.CharField(blank=True, max_length=20)),
                ('role', models.CharField(choices=[('member', 'Member'), ('secretary', 'Secretary'), ('treasurer', 'Treasurer'), ('chairperson', 'Chairperson'), ('admin', 'Administrator')], default='member', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('probation', 'Probation Period'), ('active', 'Active'), ('suspended', 'Suspended'), ('inactive', 'Inactive'), ('exited', 'Exited')], default='pending', max_length=20)),
                ('application_date', models.DateField(auto_now_add=True)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('probation_end_date', models.DateField(blank=True, null=True)),
                ('exit_date', models.DateField(blank=True, null=True)),
                ('bank_reference_names', models.TextField(blank=True, help_text='Comma-separated list of names as they appear on bank statements')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15)),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50)),
                ('occupation', models.CharField(blank=True, max_length=100)),
                ('employer', models.CharField(blank=True, max_length=200)),
                ('monthly_income_range', models.CharField(blank=True, choices=[('0-5000', 'R0 - R5,000'), ('5001-10000', 'R5,001 - R10,000'), ('10001-20000', 'R10,001 - R20,000'), ('20001-30000', 'R20,001 - R30,000'), ('30001-50000', 'R30,001 - R50,000'), ('50000+', 'R50,000+')], max_length=20)),
                ('payout_preference', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('cash', 'Cash'), ('cheque', 'Cheque')], default='bank_transfer', max_length=20)),
                ('application_notes', models.TextField(blank=True)),
                ('admin_notes', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('stokvel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='stokvel.stokvel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Member',
                'verbose_name_plural': 'Members',
                'ordering': ['stokvel', 'member_number'],
                'unique_together': {('user', 'stokvel')},
            },
        ),
        migrations.CreateModel(
            name='MemberActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('payment_made', 'Payment Made'), ('meeting_attended', 'Meeting Attended'), ('profile_updated', 'Profile Updated'), ('status_changed', 'Status Changed'), ('penalty_applied', 'Penalty Applied'), ('penalty_waived', 'Penalty Waived')], max_length=20)),
                ('description', models.TextField()),
                ('related_object_type', models.CharField(blank=True, max_length=50)),
                ('related_object_id', models.CharField(blank=True, max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='accounts.member')),
            ],
            options={
                'verbose_name': 'Member Activity',
                'verbose_name_plural': 'Member Activities',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='MembershipApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='submitted', max_length=20)),
                ('motivation', models.TextField(help_text='Why do you want to join this stokvel?')),
                ('referral_source', models.CharField(blank=True, help_text='How did you hear about us?', max_length=100)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('submitted_date', models.DateTimeField(auto_now_add=True)),
                ('decision_date', models.DateTimeField(blank=True, null=True)),
                ('referred_by', models.ForeignKey(blank=True, help_text='Existing member who referred you', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to='accounts.member')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_applications', to=settings.AUTH_USER_MODEL)),
                ('stokvel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='stokvel.stokvel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Membership Application',
                'verbose_name_plural': 'Membership Applications',
                'ordering': ['-submitted_date'],
                'unique_together': {('user', 'stokvel')},
            },
        ),
        migrations.CreateModel(
            name='MemberBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100)),
                ('account_holder_name', models.CharField(max_length=200)),
                ('account_number', models.CharField(max_length=50)),
                ('account_type', models.CharField(choices=[('savings', 'Savings'), ('cheque', 'Cheque'), ('current', 'Current'), ('transmission', 'Transmission')], max_length=50)),
                ('branch_code', models.CharField(max_length=10)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='accounts.member')),
            ],
            options={
                'verbose_name': 'Member Bank Account',
                'verbose_name_plural': 'Member Bank Accounts',
                'unique_together': {('member', 'account_number')},
            },
        ),
    ]
