# Generated by Django 4.2.23 on 2025-07-07 18:41

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Stokvel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('date_established', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_accepting_members', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Stokvel',
                'verbose_name_plural': 'Stokvels',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StokvelCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., '2025 Cycle', 'Year 1'", max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('expected_total_contributions', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('stokvel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cycles', to='stokvel.stokvel')),
            ],
            options={
                'verbose_name': 'Stokvel Cycle',
                'verbose_name_plural': 'Stokvel Cycles',
                'ordering': ['stokvel', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='StokvelConstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('bi_weekly', 'Bi-weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually')], default='monthly', max_length=20)),
                ('minimum_attendance_percentage', models.IntegerField(default=60, help_text='Minimum attendance percentage for valid meetings', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('minimum_members', models.IntegerField(default=5)),
                ('maximum_members', models.IntegerField(blank=True, null=True)),
                ('probation_period_months', models.IntegerField(default=3, help_text='Months a new member must complete before full membership')),
                ('contribution_start_day', models.IntegerField(default=1, help_text='Day of month when contribution period starts', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('contribution_due_day', models.IntegerField(default=31, help_text='Day of month when contributions are due (31 = last day)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('notice_period_days', models.IntegerField(default=30, help_text='Days notice required before leaving stokvel')),
                ('suspension_rules', models.TextField(blank=True, help_text='Rules for member suspension')),
                ('payout_frequency', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('bi_annually', 'Bi-annually'), ('annually', 'Annually'), ('end_of_cycle', 'End of Cycle')], default='monthly', max_length=20)),
                ('payout_order_method', models.CharField(choices=[('rotation', 'Rotation'), ('draw', 'Lucky Draw'), ('seniority', 'Seniority'), ('contribution_based', 'Contribution Based')], default='rotation', max_length=20)),
                ('constitution_text', models.TextField(blank=True, help_text='Full constitution document')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('stokvel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='constitution', to='stokvel.stokvel')),
            ],
            options={
                'verbose_name': 'Stokvel Constitution',
                'verbose_name_plural': 'Stokvel Constitutions',
            },
        ),
        migrations.CreateModel(
            name='PenaltyRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('penalty_type', models.CharField(choices=[('late_payment', 'Late Payment'), ('insufficient_payment', 'Insufficient Payment'), ('no_payment', 'No Payment'), ('missed_meeting', 'Missed Meeting'), ('early_exit', 'Early Exit'), ('breach_of_rules', 'Breach of Rules')], max_length=30)),
                ('calculation_method', models.CharField(choices=[('fixed', 'Fixed Amount'), ('percentage', 'Percentage of Contribution'), ('daily', 'Daily Accumulation'), ('tiered', 'Tiered Based on Days Late')], default='fixed', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Fixed amount or percentage (for percentage method)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('grace_period_days', models.IntegerField(default=0, help_text='Days before penalty is applied')),
                ('maximum_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum penalty amount (optional)', max_digits=10, null=True)),
                ('effective_from', models.DateField()),
                ('effective_until', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('stokvel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='penalty_rules', to='stokvel.stokvel')),
            ],
            options={
                'verbose_name': 'Penalty Rule',
                'verbose_name_plural': 'Penalty Rules',
                'ordering': ['stokvel', 'penalty_type'],
            },
        ),
        migrations.CreateModel(
            name='ContributionRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., 'Monthly Contribution', 'Registration Fee'", max_length=100)),
                ('contribution_type', models.CharField(choices=[('regular', 'Regular Contribution'), ('registration', 'Registration Fee'), ('special', 'Special Contribution'), ('emergency', 'Emergency Contribution')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('frequency', models.CharField(choices=[('once_off', 'Once Off'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually')], default='monthly', max_length=20)),
                ('effective_from', models.DateField()),
                ('effective_until', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('stokvel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contribution_rules', to='stokvel.stokvel')),
            ],
            options={
                'verbose_name': 'Contribution Rule',
                'verbose_name_plural': 'Contribution Rules',
                'ordering': ['stokvel', '-effective_from'],
            },
        ),
        migrations.CreateModel(
            name='StokvelBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100)),
                ('account_name', models.CharField(max_length=200)),
                ('account_number', models.CharField(max_length=50)),
                ('branch_code', models.CharField(max_length=10)),
                ('account_type', models.CharField(max_length=50)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('stokvel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='stokvel.stokvel')),
            ],
            options={
                'verbose_name': 'Stokvel Bank Account',
                'verbose_name_plural': 'Stokvel Bank Accounts',
                'unique_together': {('bank_name', 'account_number')},
            },
        ),
    ]
